package com.example.drawer.onboarder;

import android.os.Bundle;
import android.text.Html;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;
import androidx.viewpager.widget.ViewPager;

import com.example.drawer.R;

import de.hdodenhof.circleimageview.CircleImageView;

public class onboarder1 extends Fragment {
   CircleImageView next;
    LinearLayout dots;
    TextView[] mdots;
    @Nullable
    @Override
    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
      View v=inflater.inflate(R.layout.onboardone,container,false);

        next = v.findViewById(R.id.img_next);
        dots = getActivity().findViewById(R.id.linearlayoput);
        final ViewPager viewPager = getActivity().findViewById(R.id.pager);

       next.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                viewPager.setCurrentItem(1);
            }
        });
        addindicator(0);
        viewPager.addOnPageChangeListener(viewlistener);
        return v;
    }

    public void addindicator(int pos) {
        mdots = new TextView[5];
        dots.removeAllViews();
        for (int i = 0; i < mdots.length; i++) {
            mdots[i] = new TextView(getActivity());
            mdots[i].setText(Html.fromHtml("&#8226;"));
            mdots[i].setTextSize(35);
            mdots[i].setTextColor(getResources().getColor(R.color.Gray));
            dots.addView(mdots[i]);

        }
        if (mdots.length > 0) {
            mdots[pos].setTextColor(getResources().getColor(R.color.WhiteSmoke));
        }
    }

    ViewPager.OnPageChangeListener viewlistener = new ViewPager.OnPageChangeListener() {
        @Override
        public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {

        }

        @Override
        public void onPageSelected(int position) {
            addindicator(position);

        }

        @Override
        public void onPageScrollStateChanged(int state) {

        }

    };




}
